service: rebound-ctrl

frameworkVersion: "3"
configValidationMode: error

plugins:
  - serverless-wsgi
  - serverless-python-requirements

custom:
  stage: ${opt:stage, 'dev'}
  pythonRequirements:
    zip: false
  wsgi:
    app: src/index.app
    packRequirements: false

provider:
  name: aws
  runtime: python3.8
  stage: ${self:custom.stage}
  region: us-east-1
  versionFunctions: false
  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: "*"
        Action: execute-api:Invoke
        Resource: "execute-api:/*"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "secretsmanager:GetSecretValue"
      Resource: 
        - Ref: AppSecret
    - Effect: Allow
      Action:
        - "dynamodb:*"
      Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}*
  environment:
    SERVICE_NAME: ${self:service}
    STAGE: ${self:provider.stage}

functions:
  api:
    handler: wsgi_handler.handler
    timeout: 30
    events:
      - http: ANY /
      - http: ANY /{proxy+}

package:
  individually: true
  patterns:
    - "!node_modules/**"
    - "!.venv/**"
    - "!.requirements.zip"

resources:
  Resources:
    AppSecret:
      Type: AWS::SecretsManager::Secret
      Properties:
        Name: ${self:service}-secret
        Description: 'App sensitive data'
        SecretString: '{"ssh_keys": {}}'

    SimulationsTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: ${self:service}-${self:provider.stage}-Simulations
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    
    ProjectBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: "${self:service}-${self:provider.stage}-files"